// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transport postForm calls request with a form data and correct headers 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": FormData {
          "data": Object {
            "some": Object {
              "options": undefined,
              "value": "data",
            },
          },
        },
        "headers": Object {
          "Accept": "application/json",
          "Content-Length": "42",
          "content-type": "multipart/form-data; boundary=---feedface",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport postForm does not include null or undefined values 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": FormData {
          "data": Object {
            "some": Object {
              "options": undefined,
              "value": "data",
            },
          },
        },
        "headers": Object {
          "Accept": "application/json",
          "Content-Length": "42",
          "content-type": "multipart/form-data; boundary=---feedface",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport postForm passes append options to FormData 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": FormData {
          "data": Object {
            "some": Object {
              "options": Object {
                "filename": "other",
              },
              "value": "data",
            },
          },
        },
        "headers": Object {
          "Accept": "application/json",
          "Content-Length": "42",
          "content-type": "multipart/form-data; boundary=---feedface",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport request accepts Authorization header overrides 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "custom",
        },
      },
      BufferedConsole {
        "_buffer": Array [],
        "_counters": Object {},
        "_getSourceMaps": [Function],
        "_groupDepth": 0,
        "_timers": Object {},
        "assert": [Function],
        "clear": [Function],
        "count": [Function],
        "countReset": [Function],
        "debug": [Function],
        "dir": [Function],
        "error": [Function],
        "group": [Function],
        "groupCollapsed": [Function],
        "groupEnd": [Function],
        "info": [Function],
        "log": [Function],
        "time": [Function],
        "timeEnd": [Function],
        "trace": [Function],
        "warn": [Function],
        Symbol(counts): Map {},
        Symbol(groupIndent): "",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport request accepts absolute URLs 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "http://example.org/",
      Object {
        "headers": Object {
          "Accept": "application/json",
        },
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport request accepts options 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": "{\\"some\\":\\"data\\"}",
        "headers": Object {
          "Accept": "application/json",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport request adds the Authorization token header 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer zeus-u-1234567890",
        },
      },
      BufferedConsole {
        "_buffer": Array [],
        "_counters": Object {},
        "_getSourceMaps": [Function],
        "_groupDepth": 0,
        "_timers": Object {},
        "assert": [Function],
        "clear": [Function],
        "count": [Function],
        "countReset": [Function],
        "debug": [Function],
        "dir": [Function],
        "error": [Function],
        "group": [Function],
        "groupCollapsed": [Function],
        "groupEnd": [Function],
        "info": [Function],
        "log": [Function],
        "time": [Function],
        "timeEnd": [Function],
        "trace": [Function],
        "warn": [Function],
        Symbol(counts): Map {},
        Symbol(groupIndent): "",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport request issues a request without options 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "headers": Object {
          "Accept": "application/json",
        },
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport requestJson defaults to an empty body object 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": "{}",
        "headers": Object {
          "Accept": "application/json",
          "Content-Type": "application/json",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport requestJson merges headers into the request 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": "{\\"a\\":[1,2],\\"b\\":\\"c\\"}",
        "headers": Object {
          "Accept": "application/json",
          "Content-Type": "application/json",
          "X-Test": "foo bar",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport requestJson serializes a JSON payload into the request 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": "{\\"a\\":[1,2],\\"b\\":\\"c\\"}",
        "headers": Object {
          "Accept": "application/json",
          "Content-Type": "application/json",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;

exports[`Transport requestJson skips null and undefined keys 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "https://zeus.ci/something",
      Object {
        "body": "{\\"some\\":\\"data\\"}",
        "headers": Object {
          "Accept": "application/json",
          "Content-Type": "application/json",
        },
        "method": "POST",
      },
      Object {
        "debug": [Function],
        "error": [Function],
        "info": [Function],
        "log": [Function],
        "warn": [Function],
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Promise {},
    },
  ],
}
`;
